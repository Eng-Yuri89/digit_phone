# Generated by Django 4.0.1 on 2022-01-12 09:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(default='', max_length=200, verbose_name='Site name')),
                ('site_description', models.TextField(default='', max_length=1000, verbose_name='Site description')),
                ('site_seo_description', models.TextField(default='', max_length=1000, verbose_name='Website SEO description')),
                ('site_keywords', models.TextField(default='', max_length=1000, verbose_name='Site keywords')),
                ('article_sub_length', models.IntegerField(default=300, verbose_name='Article summary length')),
                ('sidebar_article_count', models.IntegerField(default=10, verbose_name='Number of sidebar articles')),
                ('sidebar_comment_count', models.IntegerField(default=5, verbose_name='comment count')),
                ('show_google_adsense', models.BooleanField(default=False, verbose_name='Number of sidebar comments')),
                ('google_adsense_codes', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='Advertising content')),
                ('open_site_comment', models.BooleanField(default=True, verbose_name='open site comment')),
                ('beiancode', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='record number')),
                ('analyticscode', models.TextField(default='', max_length=1000, verbose_name='Website Statistics Code')),
                ('show_gongan_code', models.BooleanField(default=False, verbose_name='是否显示公安备案号')),
                ('gongan_beiancode', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='gongan beiancode')),
                ('resource_path', models.CharField(default='/var/www/resource/', max_length=300, verbose_name='resource path')),
            ],
            options={
                'verbose_name': 'blog setting',
                'verbose_name_plural': 'blog setting',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Link name')),
                ('link', models.URLField(verbose_name='link address')),
                ('sequence', models.IntegerField(unique=True, verbose_name='sort')),
                ('is_enable', models.BooleanField(default=True, verbose_name='link enable')),
                ('show_type', models.CharField(choices=[('i', 'front page'), ('l', 'List'), ('p', 'Article page'), ('a', 'Full Site'), ('s', 'Friendship link page')], default='i', max_length=1, verbose_name='Display type')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Change the time')),
            ],
            options={
                'verbose_name': 'links',
                'verbose_name_plural': 'links',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='SideBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('content', models.TextField(verbose_name='content')),
                ('sequence', models.IntegerField(unique=True, verbose_name='sort')),
                ('is_enable', models.BooleanField(default=True, verbose_name='sidebar enable')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modfiy time')),
            ],
            options={
                'verbose_name': 'sidebar',
                'verbose_name_plural': 'sidebar',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='tag')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
                ('create_at', models.DateTimeField(auto_now=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'article tags',
                'verbose_name_plural': 'article tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='name')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
                ('index', models.IntegerField(default=0, verbose_name='category index')),
                ('create_at', models.DateTimeField(auto_now=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='article category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'category',
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('keyword', models.CharField(default='', max_length=255)),
                ('body', tinymce.models.HTMLField(blank=True, default='', null=True)),
                ('pub_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='release time')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Publish', 'Publish')], default='Draft', max_length=10, verbose_name='Article status')),
                ('image', models.ImageField(default='images/Ydoob.png', upload_to='images/article/%Y/%m')),
                ('is_featured', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=255)),
                ('comment_status', models.CharField(choices=[('Open', 'Open'), ('Close', 'Close')], default='Close', max_length=10, verbose_name='Comment status')),
                ('type', models.CharField(choices=[('Article', 'Article'), ('Page', 'Page')], default='Article', max_length=10, verbose_name='type')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Pageviews')),
                ('article_order', models.IntegerField(default=0, verbose_name='Sort, the higher the number, the higher the front')),
                ('show_toc', models.BooleanField(default=False, verbose_name=' display the toc ')),
                ('slug', models.SlugField(unique=True)),
                ('create_at', models.DateTimeField(auto_now=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='Classification')),
                ('tags', models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='tag collection')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'article',
                'ordering': ['-article_order', '-pub_time'],
                'get_latest_by': 'id',
            },
        ),
    ]
